__NUXT_JSONP__("/blog/a-computer-vision-based-bed-fall-detection-algorithm", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX){return {data:[{article:{slug:ab,description:"I designed a home video surveillance system and a CV based Bed Fall Detection feature. I used a Raspberry Pi 3 as a computation and orchestration module.",title:"\u003Cspan\u003EA Computer Vision based\u003Cstrong\u003E Bed Fall Detection\u003C\u002Fstrong\u003E algorithm\u003C\u002Fspan\u003E",author:"Gioele Crispo",img:ac,alt:"bed-fall-detection",tags:["computer-vision","python"],createdAt:ad,updatedAt:ad,toc:[{id:ae,depth:y,text:L},{id:af,depth:y,text:M},{id:ag,depth:y,text:N},{id:ah,depth:t,text:ai},{id:aj,depth:t,text:ak},{id:al,depth:y,text:O},{id:am,depth:t,text:P},{id:an,depth:t,text:ao},{id:ap,depth:t,text:Q},{id:aq,depth:t,text:R},{id:ar,depth:t,text:S},{id:as,depth:t,text:T},{id:at,depth:t,text:au},{id:av,depth:y,text:U},{id:aw,depth:t,text:ax},{id:ay,depth:t,text:az},{id:aA,depth:y,text:V}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:ab},children:[{type:b,tag:j,props:{href:"#a-computer-vision-based-bed-fall-detection-algorithm",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:"A Computer Vision based Bed Fall Detection algorithm"}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:W,props:{},children:[{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:L}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:M}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:N}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:O}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:U}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:V}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:z,props:{id:ae},children:[{type:b,tag:j,props:{href:"#introduction",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"I was asked to build a home surveillance system to monitor two elderly people and immediately\nalert someone if particular types of events occur.\nIn this post, I'll tell you how I implemented the system; I added an important artificial\nintelligence feature, the "},{type:b,tag:q,props:{},children:[{type:a,value:aB}]},{type:a,value:", not natively supported by the cameras."}]},{type:a,value:c},{type:b,tag:z,props:{id:af},children:[{type:b,tag:j,props:{href:"#system-setup",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"After a thorough research on the web, I decided to buy three TP-Link Tapo C200 and arrange\nthem in three strategic points of the house:"}]},{type:a,value:c},{type:b,tag:W,props:{},children:[{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"one in front of the entrance door (overlooking the living room);"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"one in the kitchen, the most lived-in area of the house;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"and the last one right above the bed, so to monitor them even while sleeping."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:l,props:{className:[x],style:aC},children:[{type:a,value:c},{type:b,tag:l,props:{style:X},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fbedfall_elderly_house.png",alt:"house",width:"100%"},children:[]},{type:a,value:c},{type:b,tag:d,props:{style:J},children:[{type:a,value:"a. 2D apartment plan "}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[]},{type:b,tag:i,props:{},children:[]}]},{type:a,value:c},{type:b,tag:l,props:{className:[x],style:F},children:[{type:a,value:c},{type:b,tag:l,props:{className:[A]},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fliving.png",alt:"living",width:B},children:[]},{type:a,value:c},{type:b,tag:d,props:{style:aD},children:[{type:a,value:"b. Living."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{className:[A]},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fkitchen.png",alt:"kitchen",width:B},children:[]},{type:a,value:c},{type:b,tag:d,props:{style:K},children:[{type:a,value:"c. Kitchen."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{className:[A]},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fbedroom.png",alt:"bedroom",width:B},children:[]},{type:a,value:aE},{type:b,tag:g,props:{},children:[{type:b,tag:d,props:{style:K},children:[{type:a,value:"d. Bedroom."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{className:[x]},children:[{type:a,value:c},{type:b,tag:d,props:{style:aF},children:[{type:a,value:"Fig.1. Arrangement of the cameras in the house"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The choice of TP-Link Tapo C200 was very congenial, because they have a low cost\n(about € 100 for all three) and many interesting features:"}]},{type:a,value:c},{type:b,tag:W,props:{},children:[{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"night vision"}]},{type:a,value:" up to 8 meters;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"1080p resolution;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"horizontal movement up to 360° and vertical movement up to 114°"}]},{type:a,value:";"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"motion sensor on which to enable notifications;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"integrated acoustic and light alarm;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"two-way audio to communicate with anyone near the camera;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"possibility to store up to 15 days of video on a microSD;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"integration with Alexa and Google Assistant."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[]},{type:a,value:"\nAnyway, the most important thing is that "},{type:b,tag:q,props:{},children:[{type:a,value:"there is an (unofficial) SDK, called PyTapo"}]},{type:a,value:",\navailable on Pypi at "},{type:b,tag:j,props:{href:aG,rel:[Y,Z,_],target:$},children:[{type:a,value:aG}]},{type:a,value:",\nthat allows to interact with the webcams, take the video stream and process it."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Through a brief configuration from the dedicated app, I connected the three webcams to the\nWi-Fi network. I set up a "},{type:b,tag:q,props:{},children:[{type:a,value:"Raspberry Pi 3"}]},{type:a,value:" near the modem (exactly in the center of the house)\nto capture and process the video stream of the three webcams in real-time.\nSo I wrote a program in Python which runs on the Raspberry and, through the PyTapo library,\nconnects to the three webcams, then performs operations on the video streams."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Well, let's go on to describe why I implemented a custom Fall Bed Detection and how I did it."}]},{type:a,value:c},{type:b,tag:z,props:{id:ag},children:[{type:b,tag:j,props:{href:"#why-bed-fall-detection",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:N}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:aB}]},{type:a,value:" is a very important feature, especially for the elderly or infirm who have\nneurological or motor problems: in case of falling out of bed, these people either do not realize\nwhat has happened or are unable to move and call for help in a autonomous manner.\nTherefore, having the ability to monitor these people at night through automatic systems makes it\npossible to relieve assistance from working 24 hours a day."}]},{type:a,value:c},{type:b,tag:u,props:{id:ah},children:[{type:b,tag:j,props:{href:"#the-requirement",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:ai}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"My order picker is a man of around 60 who has to assist his parents, two semi-self-sufficient elderly\npeople. He asked me to create a video surveillance system to have the possibility of monitoring the\nelderly even when he was not with them and with the possibility of being notified in some specific cases.\nIn particular, the most important need was to be able to go home to sleep while staying updated on\nthe status and be notified instantly in case of falling out of bed."}]},{type:a,value:c},{type:b,tag:u,props:{id:aj},children:[{type:b,tag:j,props:{href:"#the-challenge-and-other-implementations",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:ak}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The TP-Link Tapo C200 have different alerting capabilities, mainly related to motion detection.\nMore expensive cameras offer other more complex automatic detection and alerting features, but\ngenerally finding an implementation of Bed Fall Detection is rare, because it must be customized\nin relation to the environment and the bed on which it has to work."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"In fact, the most common implementations of Bed Fall Detection "},{type:b,tag:q,props:{},children:[{type:a,value:"rely on presence sensors"}]},{type:a,value:" at\nthe foot of the bed or on "},{type:b,tag:q,props:{},children:[{type:a,value:"motion sensors"}]},{type:a,value:" (or a combination of the two categories) and some logic\nof event evaluation. Fig. 2. shows how are the most used sensor types in this task."}]},{type:a,value:c},{type:b,tag:l,props:{style:aC},children:[{type:a,value:c},{type:b,tag:l,props:{},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fstate-of-the-art-bed-fall-detection.jpg",alt:"bed-sensors",width:"50%"},children:[]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:d,props:{style:J},children:[{type:a,value:"Fig. 2. Example of a Bed Fall Detection implementation based on bed sensors."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The paper "},{type:b,tag:j,props:{href:"https:\u002F\u002Fieeexplore.ieee.org\u002Fdocument\u002F9257376",rel:[Y,Z,_],target:$},children:[{type:a,value:"Bed-Fall Detection and Prediction: A Generic Classification and Review of Bed-Fall Related System"}]},{type:a,value:",\npublished on IEEE Sensors Journal 21 (2021), by Ibrahim, Ali, Kabalan Chaccour, Amir Hajjam el\nHassani and Emmanuel Andres, tracks well the state-of-the-art of this kind of systems."}]},{type:a,value:c},{type:b,tag:z,props:{id:al},children:[{type:b,tag:j,props:{href:"#how-i-implemented-it",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The Bed Fall Detection algorithm I created is based solely on video images.\nIts final version is based on six main macro steps:"}]},{type:a,value:c},{type:b,tag:aH,props:{},children:[{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:P}]},{type:a,value:" with respect to the bed;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:b,tag:"em",props:{},children:[{type:a,value:"Normalization"}]},{type:a,value:" of the image"}]},{type:a,value:" with respect to the focus point and lens parameters;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:Q}]},{type:a,value:" next to the bed to be monitored;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:R}]},{type:a,value:", through background subtraction"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:S}]},{type:a,value:" if the previous step confirmed the presence of a foreign object;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:T}]},{type:a,value:" if the object is a person who remains in the RoI for more than a certain time interval."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:i,props:{},children:[]},{type:a,value:"\nLet me describe how I came to set up the algorithm in this way, going into the details of each step.\n"},{type:b,tag:i,props:{},children:[]}]},{type:a,value:c},{type:b,tag:u,props:{id:am},children:[{type:b,tag:j,props:{href:"#correct-positioning-of-the-camera",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"First, I tried to understand how to best position the camera to simplify the algorithm's work.\nInitially, I placed the camera above the bed, centrally, so as to also capture the sides, left and\nright of the bed.\nI then took several photos, simulating falls from the bed, in order to understand how large the\narea of interest to monitor was. I adjusted the position of the camera accordingly, until I got good\ncoverage of the area and made sure that the scene focused only on the bed and the side areas."}]},{type:a,value:c},{type:b,tag:u,props:{id:an},children:[{type:b,tag:j,props:{href:"#normalization-of-the-image",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:ao}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Generally, video surveillance cameras have a wide angle view, so the images are distorted, so computer vision algorithm\nand neural networks may have some difficulty in recognizing objects that are not in a format for which this algorithm or\nnetwork has been trained.\nSo, by calculating the point and the focal distance, knowing the parameters of the lens and the height\nat which the camera was positioned, I applied a correction in order to have the image as if it were captured\n\"from the front\"."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Thus, I transformed the original image into a \"normalized\" one; I made a crop of the image and a warp transformation,\nbased on the technical specifications of the webcam and its position with respect to the bed.\nTo do this, I used the OpenCV functions "},{type:b,tag:aa,props:{},children:[{type:a,value:"cv2.getPerspectiveTransform"}]},{type:a,value:" and "},{type:b,tag:aa,props:{},children:[{type:a,value:"cv2.warpPerspective"}]},{type:a,value:",\nas shown in the snippet below."}]},{type:a,value:c},{type:b,tag:l,props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-python","line-numbers"]},children:[{type:b,tag:aa,props:{},children:[{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:aI}]},{type:a,value:" cv2 \n"},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:aI}]},{type:a,value:" numpy "},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"as"}]},{type:a,value:" np\n\n"},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"def"}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,"function"]},children:[{type:a,value:"adjust_perspective"}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:C}]},{type:a,value:r},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:D}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:":"}]},{type:a,value:"\n    rows"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:" cols"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:" ch "},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:I}]},{type:a,value:" img"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:E}]},{type:a,value:"shape    \n    "},{type:b,tag:d,props:{className:[e,aJ]},children:[{type:a,value:"# these parameters depends on the camera properties and the position of it with respect to the bed"}]},{type:a,value:aK},{type:b,tag:d,props:{className:[e,aJ]},children:[{type:a,value:"# pts1 coords are remapped on the pts2 coords "}]},{type:a,value:"\n    pts1 "},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:I}]},{type:a,value:aL},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:E}]},{type:a,value:aM},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:C}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aN},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aO},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aP},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aO},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aN},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aQ},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aP},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aQ},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:D}]},{type:a,value:" \n    pts2 "},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:I}]},{type:a,value:aL},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:E}]},{type:a,value:aM},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:C}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aR},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aS},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aT},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aS},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aR},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aU},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:v}]},{type:a,value:aT},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:aU},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:w}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:D}]},{type:a,value:"\n    \n    M "},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:I}]},{type:a,value:aV},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:E}]},{type:a,value:"getPerspectiveTransform"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:C}]},{type:a,value:"pts1"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:" pts2"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:D}]},{type:a,value:"\n    dst "},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:I}]},{type:a,value:aV},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:E}]},{type:a,value:"warpPerspective"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:C}]},{type:a,value:r},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:" M"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:s},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:C}]},{type:a,value:"cols"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:k}]},{type:a,value:" rows"},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:D}]},{type:b,tag:d,props:{className:[e,f]},children:[{type:a,value:D}]},{type:a,value:aK},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"return"}]},{type:a,value:" dst\n"}]}]}]},{type:a,value:c},{type:b,tag:u,props:{id:ap},children:[{type:b,tag:j,props:{href:"#identification-of-the-region-of-interest-roi",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"This way, I was able to draw the Region of Intestest (RoI) to be monitored aside to the bed,\nas shown in Fig. 3."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:l,props:{className:[x],style:F},children:[{type:a,value:c},{type:b,tag:l,props:{className:[A]},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fbedfall_original.jpg",alt:"bedfall_original",width:B},children:[]},{type:a,value:c},{type:b,tag:d,props:{style:aD},children:[{type:a,value:"a. Original image."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{className:[A]},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fbedfall_adjusted.jpg",alt:"bedfall_adjusted",width:B},children:[]},{type:a,value:c},{type:b,tag:d,props:{style:K},children:[{type:a,value:"b. Image after cropping and warp transformation computed on camera parameters."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{className:[A]},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fbedfall_adjusted_with_roi.jpg",alt:"bedfall_adjusted_with_roi",width:B},children:[]},{type:a,value:aE},{type:b,tag:g,props:{},children:[{type:b,tag:d,props:{style:K},children:[{type:a,value:"c. Image with Regions of Interest (RoI) aside of the bed."}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:l,props:{className:[x],style:F},children:[{type:a,value:c},{type:b,tag:d,props:{style:aF},children:[{type:a,value:"Fig.3. An image captured from the camera put on the bed (a) and the transformations made to highlight the areas aside of the bed to detect bed falls (b), (c)."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:u,props:{id:aq},children:[{type:b,tag:j,props:{href:"#evaluation-of-the-object-area-with-respect-to-the-roi",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Got the RoIs, the next step was to use background subtraction techniques to understand the elements that entered\nthe areas of interest, that is, those on the sides of the bed.\nI made sure that the RoI area was large enough to hold the outline of a person lying down.\nHowever, I thought not to make the quadrangle area excessively large, in order to reduce the possibility to have more\nthan one object or have extraneous things in the area."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"On this basis, I evaluate the ratio of the area occupied by the object in relation to the area of the RoI and make\ndecisions accordingly. In fact, if the ratio is very small, we can deduce that the object is\nnot a person or it is not a person lying down (thus falling out of bed); on the other hand, if the ratio is higher\nthan 60%, with a certain probability it is a person lying on the ground."}]},{type:a,value:c},{type:b,tag:l,props:{className:[x],style:F},children:[{type:a,value:c},{type:b,tag:l,props:{style:X},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fmask_and_area_calculation.png",alt:aW,width:aX},children:[]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{style:J},children:[{type:a,value:"Fig. 4. Evaluation of object area with respect to the RoI (Area Ratio checking step)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Anyway, this assumption is not sufficient to determine a bed fall."}]},{type:a,value:c},{type:b,tag:u,props:{id:ar},children:[{type:b,tag:j,props:{href:"#identification-of-objects-types-in-the-roi-via-yolo",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:S}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"In fact, there are many cases in which there are objects near the bed that occupy more than the 60% of the area of\nthe RoI, for example a carpet placed temporarily next to the bed, or sheets and blankets."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"So, I added one more step. I used YOLOv5 to do real-time object detection and be sure that the object\ninside the area of interest was actually a person. YOLOv5 ("},{type:b,tag:j,props:{href:"https:\u002F\u002Fgithub.com\u002Fultralytics\u002Fyolov5",rel:[Y,Z,_],target:$},children:[{type:a,value:"more details here"}]},{type:a,value:")\nis a family of CNN networks for object detection that works extremely well, is fast, can be used in\nreal-time even on hardware little performance like that of a Raspberry Pi 3. Furthermore, it can be\nconverted into ONNX format and used directly in OpenCV: in this way, in addition to being more\nperforming, it is also very simple to use and goes very well with computer vision and image processing."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"YOLOv5 is a very performing network, since it can easily identify both people facing and facing back, as shown in Fig. 5."}]},{type:a,value:c},{type:b,tag:l,props:{className:[x],style:F},children:[{type:a,value:c},{type:b,tag:l,props:{style:X},children:[{type:a,value:c},{type:b,tag:r,props:{src:"blog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002Fyolo_detection.png",alt:aW,width:aX},children:[]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{style:J},children:[{type:a,value:"Fig. 5. YOLOv5 detection on a person from behind."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:u,props:{id:as},children:[{type:b,tag:j,props:{href:"#confirmation-of-bed-fall-detection",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:T}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"In some cases, there may actually be a person lying next to the bed, perhaps temporarily, to do some\ncleaning for example. To limit these situations, I have set that the algorithm to activate the alarm\nmust have a certain confidence in detecting a person lying down for a certain period of time, for\nexample 30 or 60 seconds. People who perform cleaning rarely stay in the same position for many seconds\nand this increases the precision of the detection."}]},{type:a,value:c},{type:b,tag:u,props:{id:at},children:[{type:b,tag:j,props:{href:"#results",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:au}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The use of YOLO, area ration checking and the temporary confirmation has greatly improved the accuracy of Bed Fall Detection,\ncalculated on a test dataset consisting of 200 falls from the bed that I recorded specifically to evaluate\nthe performance of the algorithm.\nThe latter, in fact, works very well and achieves "},{type:b,tag:q,props:{},children:[{type:a,value:"an accuracy of about 87%"}]},{type:a,value:".\nThe combination of the first two steps improves a lot the precision, because while YOLO\nrecognizes people on a clean and easy-to-process image, the area ratio check step confirms the detection.\nIn fact, it may happen that the person is standing next to the bed and that YOLO is able\nto recognize him (even if it is very difficult because due to how high the camera is placed, the image\nof a person standing is very distorted and not always the face is recognizable). However, the area\noccupied by a standing person is certainly smaller than that occupied by a person lying down and\ntherefore the prediction is discarded by the area ratio checking step."}]},{type:a,value:c},{type:b,tag:z,props:{id:av},children:[{type:b,tag:j,props:{href:"#room-for-improvements",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:U}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"This system is based only on the use of cameras and computer vision algorithms.\nThe first version of the algorithm, without the use of YOLOv5, had good recall and low precision; the use\nof YOLO allowed to increase the precision, significantly lowering the false positives and achieving a\ngood result.\nHowever, the criticalities of this system are mainly two:"}]},{type:a,value:c},{type:b,tag:aH,props:{},children:[{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"sometimes "},{type:b,tag:q,props:{},children:[{type:a,value:"false negatives"}]},{type:a,value:" are found;"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"the "},{type:b,tag:q,props:{},children:[{type:a,value:"control area is limited to the lateral areas closest to the bed"}]},{type:a,value:E}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:i,props:{},children:[]},{type:a,value:c},{type:b,tag:u,props:{id:aw},children:[{type:b,tag:j,props:{href:"#false-negatives",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:ax}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The version of YOLOv5 currently in use on the system is the \"small\" one, fast but not extremely accurate.\nThe tradeoff is also given by the computation capabilities of the Raspberry Pi 3, which are not very high.\nUsing a more powerful version would reduce the frames that can be processed per second, making predictions\nunstable.\nFurthermore, the control step of the ratio of the occupied area to the RoI is based on assumptions that\nmay not always be verified, such as in the case of children (who are smaller and take up less space).\nHere, YOLO could be used to distinguish the adult from the child and make different decisions; however,\na more powerful version of YOLO is also required in this case.\nOne solution could be to move the architecture to the Cloud, perhaps relying on protocol-based solutions\nsuch as MQTT to act in real-time and have all the necessary power available."}]},{type:a,value:c},{type:b,tag:u,props:{id:ay},children:[{type:b,tag:j,props:{href:"#management-of-the-region-of-interest",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:az}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"The regions of interest were defined empirically and positioned exactly alongside the bed, in the area\nclosest to it. In the event of a violent fall, the person may move a long way from the bed and the fall\nevent may not be identified. Enlarging the Regions of Interest is not a good solution because clearly\nthe logic of confirming the prediction should be rethought. A more effective method would certainly be\nto monitor the bed and understand how the person \"leaves\" the area identified as bed.\nThis computation should be done in parallel and therefore a higher power is required to ensure good\nperformance."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Finally, there is another point to take into consideration: the regions of interest must be\nappropriately calibrated according to the characteristics of the camera, the height at which it is\npositioned and the size of the bed. This is not a trivial operation, and I have spent quite some time\ngetting the configuration right.\nIn fact, this makes it difficult to sell Bed Fall Detection as an out-of-the-box feature of video\nsurveillance cameras. Nevertheless, the solution is very suitable for custom installations, for example\nin nursing homes or hospitals. Perhaps, by specifying well in the instructions the reference measurements\nfor the positioning of the camera, the functionality could be brought even to medium-low range cameras\nintended for a wider audience."}]},{type:a,value:c},{type:b,tag:z,props:{id:aA},children:[{type:b,tag:j,props:{href:"#conclusions",ariaHidden:m,tabIndex:n},children:[{type:b,tag:d,props:{className:[o,p]},children:[]}]},{type:a,value:V}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"A video surveillance system can be very useful, especially in contexts where people are not\nself-sufficient. Very often, the cameras on the market already offer alarm and event detection\nfeatures, but they are generic and almost never adapt well to the shape of the house or the\ncontext in which people live.\nTherefore, having the ability to access and process the video stream is really a great thing\nand opens up many possibilities for customizing and improving the system, without spending a lot."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Today, I have developed the Bed Fall Detection functionality for my customer, but tomorrow I\nmay have to develop something even more sophisticated and useful for home surveillance. Having\na reference architecture is certainly a very important step."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:"By moving to a Cloud-based implementation, the possibilities are almost endless"}]},{type:a,value:": combining video\nstreams and sensor data as inputs to complex deep learning algorithms is no longer a problem and\nbecomes within everyone's reach."}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002Fa-computer-vision-based-bed-fall-detection-algorithm",extension:".md"}}],fetch:{},mutations:[["AppState\u002FsetAppToolbarImage",ac]]}}("text","element","\n","span","token","punctuation","p","li","br","a",",","div","true",-1,"icon","icon-link","strong","img"," ",3,"h3","[","]","blog-row",2,"h2","blog-three-column","95%","(",")",".","text-align:center; justify-content: center","keyword","operator","=","font-size: 12px;","font-size: 12px; margin: 10px;","Introduction","System setup","Why Bed Fall Detection","How I implemented it","Correct positioning of the camera","Identification of the Region of Interest (RoI)","Evaluation of the object area with respect to the RoI","Identification of objects types in the RoI via YOLO","Confirmation of bed fall detection","Room for improvements","Conclusions","ul","text-align:center","nofollow","noopener","noreferrer","_blank","code","a-computer-vision-based-bed-fall-detection-algorithm","\u002Fblog\u002Fa-computer-vision-based-bed-fall-detection-algorithm\u002F_index.jpg","2022-07-17T11:26:40.123Z","introduction","system-setup","why-bed-fall-detection","the-requirement","The requirement","the-challenge-and-other-implementations","The Challenge and other implementations","how-i-implemented-it","correct-positioning-of-the-camera","normalization-of-the-image","Normalization of the image","identification-of-the-region-of-interest-roi","evaluation-of-the-object-area-with-respect-to-the-roi","identification-of-objects-types-in-the-roi-via-yolo","confirmation-of-bed-fall-detection","results","Results","room-for-improvements","false-negatives","False negatives","management-of-the-region-of-interest","Management of the Region of Interest","conclusions","Bed Fall Detection","text-align:center;","font-size: 12px;  margin: 10px;"," \n","font-size: 12px; margin: auto","https:\u002F\u002Fpypi.org\u002Fproject\u002Fpytapo","ol","import","comment","\n    "," np","float32","x1"," y2","x2"," y1","x1_w"," y2_w","x2_w"," y1_w"," cv2","mask_and_area_calculation","90%")));